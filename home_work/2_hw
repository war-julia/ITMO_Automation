#a. создайте функцию task_1(), в теле функции:
#i. создайте 5 разных переменных с произвольным названием.
#ii. у каждой укажите тип, типы следующие 1. int, float, str, list, bool
#iii. заполните переменные произвольными значениями, с соответствующим для каждой типом
#iv. выведите тип данных каждой в консоль.
#b. в функцию добавьте аннотацию возвращаемых данных
#c. добавьте вызов функции.


def task_1() -> None:
    a: int = 10
    b: float = 3.14
    c: str = "Поезд"
    d: list = [1, 2, 3, 66,89]
    e: bool = True

    print(type(a))
    print(type(b))
    print(type(c))
    print(type(d))
    print(type(e))


task_1()



#a. создайте функцию task_2(), в теле функции:
#i. есть список a = [1, 2, 3, 5, 8, 13, 21]
#ii. выведите в консоль первые 3 значения списка
#b. в функцию добавьте аннотацию возвращаемых данных
#c. добавьте вызов функции.
#d. * - скажите как называется эта последовательность чисел
#Эта последовательность чисел называется последовательность Фибоначчи.
# Классическая последовательность Фибоначчи начинается с чисел 0 и 1 (или 1 и 1),
# и каждое следующее число равно сумме двух предыдущих: 0, 1, 1, 2, 3, 5, 8, 13, 21



def task_2() -> None:
    a: list = [1, 2, 3, 5, 8, 13, 21]
    print(a[0:3])

task_2()



#напишите функцию task_3(), которая принимает число и возвращает квадрат этого числа.
#b. пропишите аннотации для функции и аргумента
#c. распечатайте в консоль вызов функции

def task_3(num: int) -> int:
    sq_num: num = num **2
    print(sq_num)

task_3(82)


